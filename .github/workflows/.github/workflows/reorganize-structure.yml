name: Reorganize Directory Structure
on:
  workflow_dispatch:  # Manual trigger

jobs:
  reorganize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Configure Git
        run: |
          git config --global user.name "anandhu723"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create reorganize_structure.py
        run: |
          cat > reorganize_structure.py << 'EOL'
          """
          Directory Reorganization Script
          Version: 1.0.0
          Created: 2025-06-08 22:48:19
          Author: anandhu723
          """
          
          import os
          import shutil
          from pathlib import Path
          import logging
          
          logging.basicConfig(level=logging.INFO)
          logger = logging.getLogger(__name__)
          
          def setup_directory_structure():
              base_dirs = [
                  'saveai/api/handlers',
                  'saveai/core',
                  'saveai/services',
                  'saveai/tests/test_api',
                  'saveai/deployment/docker/nginx/conf.d'
              ]
              for dir_path in base_dirs:
                  Path(dir_path).mkdir(parents=True, exist_ok=True)
                  logger.info(f"Created directory: {dir_path}")
          
          def move_files():
              file_mappings = {
                  'saveai/core/saveai/api/config.py': 'saveai/api/config.py',
                  'saveai/core/saveai/api/middleware.py': 'saveai/api/middleware.py',
                  'saveai/core/saveai/api/router.py': 'saveai/api/router.py',
                  'saveai/core/saveai/tests/__init__.py': 'saveai/tests/__init__.py',
                  'saveai/core/saveai/tests/conftest.py': 'saveai/tests/conftest.py',
                  'saveai/core/saveai/tests/test_api/test_analytics.py': 'saveai/tests/test_api/test_analytics.py',
                  'saveai/core/saveai/tests/test_api/test_blockchain.py': 'saveai/tests/test_api/test_blockchain.py',
                  'saveai/core/saveai/tests/test_api/test_security.py': 'saveai/tests/test_api/test_security.py',
                  'saveai/core/saveai/tests/test_api/test_tax.py': 'saveai/tests/test_api/test_tax.py',
                  'saveai/core/saveai/deployment/docker/Dockerfile': 'saveai/deployment/docker/Dockerfile',
                  'saveai/core/saveai/deployment/docker/docker-compose.yml': 'saveai/deployment/docker/docker-compose.yml',
                  'saveai/core/saveai/deployment/docker/.env.example': 'saveai/deployment/docker/.env.example',
                  'saveai/core/saveai/deployment/docker/nginx/conf.d/default.conf': 'saveai/deployment/docker/nginx/conf.d/default.conf'
              }
              for src, dst in file_mappings.items():
                  if os.path.exists(src):
                      os.makedirs(os.path.dirname(dst), exist_ok=True)
                      shutil.move(src, dst)
                      logger.info(f"Moved {src} to {dst}")
                  else:
                      logger.warning(f"Source file not found: {src}")
          
          def cleanup_empty_dirs():
              for root, dirs, files in os.walk('saveai', topdown=False):
                  for dir_name in dirs:
                      dir_path = os.path.join(root, dir_name)
                      try:
                          os.rmdir(dir_path)
                          logger.info(f"Removed empty directory: {dir_path}")
                      except OSError:
                          pass
          
          if __name__ == "__main__":
              logger.info("Starting directory restructuring...")
              setup_directory_structure()
              move_files()
              cleanup_empty_dirs()
              logger.info("Directory restructuring completed!")
          EOL

      - name: Create verify_structure.py
        run: |
          cat > verify_structure.py << 'EOL'
          """
          Directory Structure Verification Script
          Version: 1.0.0
          Created: 2025-06-08 22:48:19
          Author: anandhu723
          """
          
          import os
          from pathlib import Path
          import logging
          
          logging.basicConfig(level=logging.INFO)
          logger = logging.getLogger(__name__)
          
          def verify_structure():
              expected_structure = {
                  'saveai': {
                      'api': ['config.py', 'middleware.py', 'router.py', 'handlers'],
                      'core': [],
                      'services': [],
                      'tests': ['__init__.py', 'conftest.py', 'test_api'],
                      'tests/test_api': [
                          'test_analytics.py',
                          'test_blockchain.py',
                          'test_security.py',
                          'test_tax.py'
                      ],
                      'deployment/docker': [
                          'Dockerfile',
                          'docker-compose.yml',
                          '.env.example'
                      ],
                      'deployment/docker/nginx/conf.d': ['default.conf']
                  }
              }
              
              def check_path(base_path, structure):
                  for key, value in structure.items():
                      path = Path(base_path) / key
                      if not path.exists():
                          logger.error(f"Missing directory: {path}")
                          continue
                      if isinstance(value, list):
                          for file in value:
                              file_path = path / file
                              if not file_path.exists():
                                  logger.error(f"Missing file: {file_path}")
                              else:
                                  logger.info(f"Verified: {file_path}")
                      else:
                          check_path(path, value)
          
              logger.info("Starting structure verification...")
              check_path('.', expected_structure)
              logger.info("Structure verification completed!")
          
          if __name__ == "__main__":
              verify_structure()
          EOL

      - name: Run reorganization script
        run: python reorganize_structure.py

      - name: Run verification script
        run: python verify_structure.py

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add .
          git commit -m "Reorganize directory structure [automated] - $(date -u +'%Y-%m-%d %H:%M:%S')"
          git push

      - name: Create summary
        run: |
          echo "## Directory Reorganization Results" >> $GITHUB_STEP_SUMMARY
          echo "### Changes Made:" >> $GITHUB_STEP_SUMMARY
          git status --porcelain >> $GITHUB_STEP_SUMMARY
